---
type: update
id: mongodb-replica-set-auto-cluster
name: MongoDB Replica Set Auto-Cluster
description: Auto-Clustering for MongoDB Replica Set 

targetNodes: none
nodeGroupAlias:
  ${settings.nodeGroup}: nosqldb

globals: 
  key: /home/jelastic/mongodb.key
  app: /home/jelastic/adminMongo/config/app.json
  rsn: rs0
  pswd: ${fn.password(10)}
  mongo: mongo -u admin -p $(cat ${globals.app} | grep pass | cut -d'"' -f4)
  add: |
    IFS=',' read -ra nodes <<< "${ids}"; action=""; i=0
    for n in "${nodes[@]}"; do [ $i -gt 0 ] && action="${action}; "; action="${action}rs.add({host:\"node${n}:27017\"})"; let "i++"; done
    echo "${action}"
    echo "${action}" | ${globals.mongo}

onInstall:
  - if (${settings.clone:false}): 
    - reconfigure
  - else:
    - configure
    - uploadKeys: nosqldb
    - init

onAfterScaleOut[nosqldb]: 
  - uploadKeys: ${event.response.nodes.join(id,)}
  - add: ${event.response.nodes.join(id,)}
onAfterScaleIn[nosqldb]: 
  remove: ${event.response.nodes.join(id,)}

onAfterClone:
  - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
  - install: ${response.jps}
    envName: ${event.response.env.envName}    
    settings: 
      nodeGroup: ${settings.nodeGroup}      
      clone: true  
          
actions:
  configure:
    - env.control.AddContainerEnvVars[nosqldb]:
        vars: {"KEY_PASS":"${fn.password}"}
    - cmd[nosqldb]: |-
        echo -e 'use admin\n db.changeUserPassword("admin", "${globals.pswd}")' | ${globals.mongo} --quiet >> /var/log/run.log
        sed -i 's@\bpassword":[^,]*@password": "${globals.pswd}"@g' ${globals.app}
  uploadKeys:
    - cmd[${nodes.nosqldb.master.id}]: |-
        [ ! -f ${globals.key} ] && {  
          openssl rand -base64 756 > ${globals.key}
          chmod 400 ${globals.key}
        }
        cat ${globals.key} | openssl enc -base64 -e -aes-256-cbc -salt -pass pass:$KEY_PASS
    - cmd[${this}]: |-
        [ ! -f ${globals.key} ] && {          
          echo -e "${response.out}" | openssl enc -base64 -d -aes-256-cbc -salt -pass pass:$KEY_PASS > ${globals.key} && echo OK
          chmod 400 ${globals.key}
          chown -R mongod:mongod ${globals.key}
        }
        sed -i "s@#replication:@replication:\\n replSetName: ${globals.rsn}@g" /etc/mongod.conf
        sed -i "s@security:@security:\\n keyFile: ${globals.key}@g" /etc/mongod.conf
        jem service restart
      user: root  
      
  init: 
    - sleep: 3000
    - cmd[${nodes.nosqldb.master.id}]: |-
        IFS=',' read -ra nodes <<< "${nodes.nosqldb.join(id,)}"; members=""; i=0
        for n in "${nodes[@]}"; do [ $i -gt 0 ] && members="${members},"; members="${members}{ _id:${i}, host:\"node${n}:27017\" }"; let "i++"; done
        echo "rs.initiate({_id:'${globals.rsn}', members:[${members}]})" | ${globals.mongo}

  add:
    - cmd[${nodes.nosqldb.master.id}]: |-
        primNodeId=$(echo "db.isMaster().primary" | ${globals.mongo} --quiet | cut -d':' -f1 | cut -d'e' -f2)
        nodeId=$(hostname -s | cut -d'-' -f1 | cut -d'e' -f2)
        [ "${nodeId}" == "${primNodeId}" ] && {
          ids="${this}"
          ${globals.add}
          echo "COMPLETED"
        } || {
          echo "${primNodeId}"
        }
    - if (response.out.indexOf("COMPLETED") == -1):     
        cmd[${response.out}]: |-
          ids="${this}"
          ${globals.add}
          echo "OK"
          
  remove:
    cmd[nosqldb]: |-
      IFS=',' read -ra nodes <<< "${this}"; action=""; i=0
      for n in "${nodes[@]}"; do [ $i -gt 0 ] && action="${action}; "; action="${action}rs.remove(\"node${n}:27017\")"; let "i++"; done
      echo "if (db.isMaster().ismaster) { ${action} }" | ${globals.mongo}
      
  reconfigure: 
    cmd[nosqldb]: |-    
      sudo jem service stop
      port=$((37000 + RANDOM%(1+38000-37000)))
      mongod --dbpath /var/lib/mongo --port $port --bind_ip localhost >> /var/log/mongodb/mongod.log &
      sleep 3
      echo -e "use local\n ids = [${nodes.nosqldb.join(id,)}]\n cfg = db.system.replset.findOne( { '_id':'${globals.rsn}' } )\n for (var i = 0; i < ids.length; i++) {cfg.members[i].host = 'node' + ids[i]+ ':27017'}\n db.system.replset.update({ '_id':'${globals.rsn}' }, cfg)" | mongo --port $port
      sudo jem service restart
      
success: |
  **Admin Panel**: [https://node${nodes.nosqldb.master.id}-${env.domain}/](https://node${nodes.nosqldb.master.id}-${env.domain}/)  
  **User**: admin  
  **Password**: ${globals.pswd}  
