---
type: update
id: mongodb-replica-set-auto-cluster
name: MongoDB Replica Set
description: Auto-Clustering for MongoDB Replica Set 

targetNodes: none
nodeGroupAlias:
  ${settings.nodeGroup}: nosqldb

globals: 
  pswd: ${fn.password(10)}
    
onInstall:
  - if (${settings.clone:false}): 
    - reconfigure
  - else:
    - configure
    - uploadKey: nosqldb
    - init

onAfterScaleOut[nosqldb]: 
  - uploadKey: ${event.response.nodes.join(id,)}
  - add: ${event.response.nodes.join(id,)}

onBeforeScaleIn[nosqldb]: 
  stepDown: ${event.response.nodes.join(id,)}

onAfterScaleIn[nosqldb]: 
  remove: ${event.response.nodes.join(id,)}

onAfterClone:
  - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
  - install: ${response.jps}
    envName: ${event.response.env.envName}    
    settings: 
      nodeGroup: ${settings.nodeGroup}      
      clone: true  
          
actions:
  configure:
    - env.control.AddContainerEnvVars[nosqldb]:
        vars: {"KEY_PASS":"${fn.password}"}
    - cmd[nosqldb]: mongo-cluster.sh changePassword ${globals.pswd}
  uploadKey:
    - cmd[${nodes.nosqldb.master.id}]: mongo-cluster.sh generateKey
    - cmd[${this}]: |-
        mongo-cluster.sh uploadKey '${response.out}'
        mongo-cluster.sh adjustConf
      user: root
      
  init: 
    - sleep: 3000
    - cmd[${nodes.nosqldb.master.id}]: mongo-cluster.sh initCluster ${nodes.nosqldb.join(id,)}

  add:
    - cmd[${nodes.nosqldb.master.id}]: mongo-cluster.sh addMember ${this}
    - if (response.out.indexOf("COMPLETED") == -1):     
        cmd[${response.out}]: mongo-cluster.sh addMember ${this}

  remove:
    - cmd[${nodes.nosqldb.master.id}]: mongo-cluster.sh removeMember ${this}
    - if (response.out.indexOf("COMPLETED") == -1):     
        cmd[${response.out}]: mongo-cluster.sh removeMember ${this}

  stepDown:
    cmd[${this}]: mongo-cluster.sh stepDown

  reconfigure: 
    cmd[nosqldb]: mongo-cluster.sh afterClone ${nodes.nosqldb.join(id,)}  
  
success: |
  **Admin Panel**: [https://node${nodes.nosqldb.master.id}-${env.domain}/](https://node${nodes.nosqldb.master.id}-${env.domain}/)  
  **User**: admin  
  **Password**: ${globals.pswd}  
